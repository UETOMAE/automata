#!/bin/sh

#
# Check if ua.csv to define testing user agents
#
[ -z "$UA_FILE" ] && UA_FILE=$TEST_ROOT/ua.csv
if [ $LOCAL_MODE == false ]; then
  if [ ! -f $UA_FILE ]; then
    echo "You have to define the testing user agents on 'ua.csv'."
    exit 1
  fi
  #
  # Validate the number of UserAgents
  #
  UA_COUNT=$((`cat $UA_FILE | wc -l`))
  if [ $UA_COUNT -gt 20 ]; then
    echo "The number of UserAgents ($UA_COUNT) are too much. You should specify it less than 20 on ua.csv."
    exit 1
  fi
  #
  # Verify all data
  #
  UA_OS=()
  UA_OS_VERSION=()
  UA_BROWSER=()
  UA_BROWSER_VERSION=()
  [ -z "$AUTOMATA_PY_BS_VALIDATE_UA" ] && AUTOMATA_PY_BS_VALIDATE_UA=$BIN_DIR/bs_validate_ua.py
  while read LINE; do
    IFS_ORG="$IFS"
    IFS=$'\n'
    BROWSER_DATA=(`python $AUTOMATA_PY_BS_VALIDATE_UA "$LINE"`)
    if [ $? -ne 0 ]; then
      echo 'Defined user agent below is not supported by browserstack. See the full list on "https://www.browserstack.com/list-of-browsers-and-platforms/automate"'
      echo $LINE
      exit 1
    fi
    IFS="$IFS_ORG"
    export UA_OS=("${UA_OS[@]}" "${BROWSER_DATA[0]}")
    export UA_OS_VERSION=("${UA_OS_VERSION[@]}" "${BROWSER_DATA[1]}")
    export UA_BROWSER=("${UA_BROWSER[@]}" "${BROWSER_DATA[2]}")
    export UA_BROWSER_VERSION=("${UA_BROWSER_VERSION[@]}" "${BROWSER_DATA[3]}")
  done < $UA_FILE
fi
